Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
                              pedro.o (__udivmodqi4)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
                              pedro.o (__divmodhi4)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_prologue.o)
                              pedro.o (__prologue_saves__)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_epilogue.o)
                              pedro.o (__epilogue_restores__)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                              pedro.o (__do_copy_data)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                              pedro.o (__do_clear_bss)
/usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

instructions        0x5a              pedro.o
rxbc                0x1               pedro.o
LastB               0x4               pedro.o
A                   0x4               pedro.o
pos                 0x4               pedro.o
mmmb                0x1               pedro.o
stepCount1          0x1               pedro.o
B                   0x4               pedro.o
tail                0x1               pedro.o
head                0x1               pedro.o
currentCommand      0x5               pedro.o
rxBuffer            0x5a              pedro.o
count               0x1               pedro.o
delayTime           0x1               pedro.o
stepCount2          0x1               pedro.o
inDelimiter         0x1               pedro.o
onP                 0x1               pedro.o
nextLineFlag        0x1               pedro.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD pedro.o
LOAD /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a
LOAD /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/libc.a
LOAD /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9a2
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000026       0x20 pedro.o
 *(.progmem*)
                0x00000046                . = ALIGN (0x2)
                0x00000046                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000046        0x0 linker stubs
 *(.trampolines*)
                0x00000046                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000046                __ctors_start = .
 *(.ctors)
                0x00000046                __ctors_end = .
                0x00000046                __dtors_start = .
 *(.dtors)
                0x00000046                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000046        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000046                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000046        0xc /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000052       0x16 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
                0x00000052                __do_copy_data
 .init4         0x00000068       0x10 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
                0x00000068                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000078        0x4 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000007c        0x2 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000007c                __vector_1
                0x0000007c                __vector_12
                0x0000007c                __bad_interrupt
                0x0000007c                __vector_6
                0x0000007c                __vector_3
                0x0000007c                __vector_13
                0x0000007c                __vector_17
                0x0000007c                __vector_7
                0x0000007c                __vector_5
                0x0000007c                __vector_4
                0x0000007c                __vector_9
                0x0000007c                __vector_2
                0x0000007c                __vector_15
                0x0000007c                __vector_8
                0x0000007c                __vector_14
                0x0000007c                __vector_10
                0x0000007c                __vector_16
                0x0000007c                __vector_18
 .text          0x0000007e      0x84c pedro.o
                0x000000c4                rxBufferDiscard
                0x0000081a                initUSART
                0x00000178                decodeNext
                0x000007fa                movePenUp
                0x0000078e                moveRel
                0x00000856                initTimers
                0x00000802                swap16
                0x0000007e                rxBufferSize
                0x00000390                line
                0x00000124                __vector_11
                0x000007fe                movePenDown
                0x00000852                initPen
                0x0000082e                initMotors
                0x000002be                wakeMotors
                0x000000a4                rxBufferPeek
                0x0000086a                main
                0x000007e6                delay_ms
                0x000002b8                sleepMotors
                0x000002ae                sendUSART
                0x000000e0                rxBufferPush
                0x00000326                moveHalfStep
                0x000002b6                setMotors
                0x00000584                processUSART
                0x000007be                moveAbs
                0x000002c4                changeStep
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_prologue.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_epilogue.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x000008ca        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
                0x000008ca                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000008ca       0x18 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
                0x000008ca                __udivmodqi4
 .text.libgcc   0x000008e2       0x26 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
                0x000008e2                __divmodhi4
                0x000008e2                _div
 .text.libgcc   0x00000908       0x38 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_prologue.o)
                0x00000908                __prologue_saves__
 .text.libgcc   0x00000940       0x36 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_epilogue.o)
                0x00000940                __epilogue_restores__
 .text.libgcc   0x00000976        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000976        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000976        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000976       0x28 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
                0x00000976                __udivmodhi4
                0x0000099e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000099e        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
                0x0000099e                exit
                0x0000099e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000099e        0x4 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000009a2                _etext = .

.data           0x00800060        0x2 load address 0x000009a2
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x2 pedro.o
                0x00800061                done
                0x00800060                nextPos
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_prologue.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_epilogue.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062       0xd4
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800062        0x0 pedro.o
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_prologue.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_epilogue.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_exit.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00800062        0x0 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800062       0xd4 pedro.o
                0x00800062                instructions
                0x008000bc                rxbc
                0x008000bd                LastB
                0x008000c1                A
                0x008000c5                pos
                0x008000c9                mmmb
                0x008000ca                stepCount1
                0x008000cb                B
                0x008000cf                tail
                0x008000d0                head
                0x008000d1                currentCommand
                0x008000d6                rxBuffer
                0x00800130                count
                0x00800131                delayTime
                0x00800132                stepCount2
                0x00800133                inDelimiter
                0x00800134                onP
                0x00800135                nextLineFlag
                0x00800136                PROVIDE (__bss_end, .)
                0x000009a2                __data_load_start = LOADADDR (.data)
                0x000009a4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800136        0x0
                0x00800136                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800136                PROVIDE (__noinit_end, .)
                0x00800136                _end = .
                0x00800136                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x82
 *(.stabstr)
 .stabstr       0x00000000       0x82 /usr/local/CrossPack-AVR-20100115/lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 pedro.o

.debug_pubnames
                0x00000000      0x263
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x263 pedro.o

.debug_info     0x00000000      0xbfc
 *(.debug_info)
 .debug_info    0x00000000      0xbfc pedro.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x332
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x332 pedro.o

.debug_line     0x00000000      0xa4d
 *(.debug_line)
 .debug_line    0x00000000      0xa4d pedro.o

.debug_frame    0x00000000      0x1a0
 *(.debug_frame)
 .debug_frame   0x00000000      0x1a0 pedro.o

.debug_str      0x00000000      0x31d
 *(.debug_str)
 .debug_str     0x00000000      0x31d pedro.o
                                0x374 (size before relaxing)

.debug_loc      0x00000000      0x4c6
 *(.debug_loc)
 .debug_loc     0x00000000      0x4c6 pedro.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(pedro.out elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 pedro.o
